#!/bin/bash

# syncmedia - a friendly rsync wrapper for syncing media folders
# Usage: syncmedia [--dry-run] <source> <destination>

set -euo pipefail

# Colors
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
CYAN="\033[1;36m"
RESET="\033[0m"

DRY_RUN=false

log_info() {
    echo -e "${CYAN}→ $1${RESET}"
    logger -t syncmedia "$1"
}

log_success() {
    echo -e "${GREEN}✔ $1${RESET}"
    logger -t syncmedia "$1"
}

log_warning() {
    echo -e "${YELLOW}⚠ $1${RESET}"
    logger -t syncmedia "$1"
}

log_error() {
    echo -e "${RED}✖ $1${RESET}" >&2
    logger -s -t syncmedia "ERROR: $1"
}

# Check for dry-run flag
if [[ "${1:-}" == "--dry-run" ]]; then
    DRY_RUN=true
    shift
fi

# Ensure we have source and destination
if [[ $# -lt 2 ]]; then
    log_error "Usage: syncmedia [--dry-run] <source> <destination>"
    exit 1
fi

SRC="$1"
DEST="$2"

# Confirm if dry run
if $DRY_RUN; then
    log_info "Performing dry run sync: ${SRC} → ${DEST}"
    RSYNC_OPTS="--dry-run"
else
    log_info "Starting sync: ${SRC} → ${DEST}"
    RSYNC_OPTS=""
fi

# Run rsync with helpful options
rsync -avh --progress --info=stats2 --info=progress2 \
    --delete \
    $RSYNC_OPTS \
    "$SRC" "$DEST"

# Exit status check
if [[ $? -eq 0 ]]; then
    log_success "Sync complete: ${SRC} → ${DEST}"
else
    log_error "Sync failed!"
    exit 1
fi

